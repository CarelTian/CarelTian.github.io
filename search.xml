<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>iptables屏蔽所有国外IP!网络安全的利器！</title>
      <link href="/2023/04/06/Chat02/"/>
      <url>/2023/04/06/Chat02/</url>
      
        <content type="html"><![CDATA[<h1 id="iptables简介"><a href="#iptables简介" class="headerlink" title="iptables简介"></a>iptables简介</h1><p>netfilter&#x2F;iptables（简称为iptables）组成Linux平台下的包过滤防火墙，与大多数的Linux软件一样，这个包过滤防火墙是免费的，它可以代替昂贵的商业防火墙解决方案，完成封包过滤、封包重定向和网络地址转换（NAT）等功能。</p><h1 id="iptables基础"><a href="#iptables基础" class="headerlink" title="iptables基础"></a><strong>iptables基础</strong></h1><p>​    规则（rules）其实就是网络管理员预定义的条件，规则一般的定义为“如果数据包头符合这样的条件，就这样处理这个数据包”。规则存储在内核空间的信息 包过滤表中，这些规则分别指定了源地址、目的地址、传输协议（如TCP、UDP、ICMP）和服务类型（如HTTP、FTP和SMTP）等。当数据包与规 则匹配时，iptables就根据规则所定义的方法来处理这些数据包，如放行（accept）、拒绝（reject）和丢弃（drop）等。配置防火墙的 主要工作就是添加、修改和删除这些规则。</p><h1 id="iptables命令的管理控制选项"><a href="#iptables命令的管理控制选项" class="headerlink" title="iptables命令的管理控制选项"></a><strong>iptables命令的管理控制选项</strong></h1><pre class="language-none"><code class="language-none">-A 在指定链的末尾添加（append）一条新的规则-D  删除（delete）指定链中的某一条规则，可以按规则序号和内容删除-I  在指定链中插入（insert）一条新的规则，默认在第一行添加-R  修改、替换（replace）指定链中的某一条规则，可以按规则序号和内容替换-L  列出（list）指定链中所有的规则进行查看-E  重命名用户定义的链，不改变链本身-F  清空（flush）-N  新建（new-chain）一条用户自己定义的规则链-X  删除指定表中用户自定义的规则链（delete-chain）-P  设置指定链的默认策略（policy）-Z 将所有表的所有链的字节和数据包计数器清零-n  使用数字形式（numeric）显示输出结果-v  查看规则表详细信息（verbose）的信息-V  查看版本(version)-h  获取帮助（help）</code></pre><h1 id="防火墙处理数据包的四种方式"><a href="#防火墙处理数据包的四种方式" class="headerlink" title="防火墙处理数据包的四种方式"></a><strong>防火墙处理数据包的四种方式</strong></h1><p>ACCEPT 允许数据包通过<br>DROP 直接丢弃数据包，不给任何回应信息<br>REJECT 拒绝数据包通过，必要时会给数据发送端一个响应的信息。<br>LOG在&#x2F;var&#x2F;log&#x2F;messages文件中记录日志信息，然后将数据包传递给下一条规则</p><h1 id="iptables-官方文档"><a href="#iptables-官方文档" class="headerlink" title="iptables 官方文档"></a>iptables 官方文档</h1><p><a href="https://netfilter.org/">https://netfilter.org/</a></p><h1 id="屏蔽外网IP"><a href="#屏蔽外网IP" class="headerlink" title="屏蔽外网IP"></a>屏蔽外网IP</h1><p>下面介绍一种方法只有国内的IP才能连接服务器，对防火墙建设有参考价值</p><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>在我刚接触云产品时，使用的是腾讯云赠送的一个月云服务器。这一个月时间里我似乎也没部署过什么项目，就照着书上和网上的资料稍微捣鼓了下Ubuntu，但是没有使用网络服务的。可就在短短一个月内，有次上机检查，就发现cpu占用率99%，接着腾讯云给我发了条消息，说是中了挖矿病毒。查看日志后，来自卢森堡的一个IP成功登录。</p><p>后来我在阿里云租了个云服务器，在上面部署了C&#x2F;S网络通信类的程序。刚开始网络编程功底不熟，没有对各种异常处理，如果没接收到预期格式的数据包就会报错。我使用的是一个很隐蔽的端口，但是经常会收到全球各地的连接，只要对方一发送数据包，服务器执行的程序就会报错退出。</p><p>再后来，我写了个网站，日志中经常能看到会有很多来自国外的爬虫进来逛。那么有没有什么方法屏蔽所有国外的连接呢？</p><h2 id="建立一条规则链"><a href="#建立一条规则链" class="headerlink" title="建立一条规则链"></a>建立一条规则链</h2><p>创建一条规则链mylink，加到入站的规则中</p><pre class="language-bash" data-language="bash"><code class="language-bash">iptables -N mylinkiptables -A INPUT -j mylink</code></pre><h2 id="获取国内所有的IP"><a href="#获取国内所有的IP" class="headerlink" title="获取国内所有的IP"></a>获取国内所有的IP</h2><p>获取所有国内的ip网段，保存到china_ssr.txt文件中</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> -q --timeout<span class="token operator">=</span><span class="token number">60</span> -O- <span class="token string">'http://ftp.apnic.net/apnic/stats/apnic/delegated-apnic-latest'</span> <span class="token operator">|</span> <span class="token function">awk</span> -F<span class="token punctuation">\</span><span class="token operator">|</span> <span class="token string">'/CN\|ipv4/ &#123; printf("%s/%d\n", $4, 32-log($5)/log(2)) &#125;'</span> <span class="token operator">></span> /root/china_ssr.txt</code></pre><h2 id="shell脚本"><a href="#shell脚本" class="headerlink" title="shell脚本"></a>shell脚本</h2><p>观察ip网段，使用的是网络前缀格式，正好满足iptables的命令格式。用vim t跳转到末尾，发现竟然有8600多行国内网段。那么首先排除一个个手动输入命令的可能，于是我写了个脚本。</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token keyword">while</span> <span class="token builtin class-name">read</span> line<span class="token keyword">do</span>   iptables -A mylink -s <span class="token variable">$line</span> -j ACCEPT<span class="token keyword">done</span> <span class="token operator">&lt;</span> china_ssr.txt</code></pre><p>上面的脚本逐行读取文件的内容，然后执行命令。经过测试，发现iptables的优先级是自顶向下的，即当前规则必须是上面规则的子集，不然就无效。现在已经把所有国内IP允许访问，接下来就禁止全网IP。</p><pre class="language-bash" data-language="bash"><code class="language-bash">iptables -A mylink -j DROP</code></pre><p>上面这条命令极其危险。一定要放在链的末尾。<del>本人就是输入了这条命令，导致无法连接到云服务器，无奈之下到阿里云回滚两个月前的快照。</del></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>此站的搭建流程</title>
      <link href="/2022/02/27/Chat01/"/>
      <url>/2022/02/27/Chat01/</url>
      
        <content type="html"><![CDATA[<p><strong>博客框架: hexo</strong></p><p><strong>主题：Yun</strong></p><p><strong>版本控制 :Git</strong></p><p><strong>服务器：Apache（部署在GitHub pages就不需要）</strong></p><p><strong>MarkDown编辑器：Typora</strong></p><p><strong>文本编辑器：Visual Studio Code</strong></p><h3 id="开端"><a href="#开端" class="headerlink" title="开端"></a>开端</h3><hr><p>关于我为什么要做一个博客，只能说一时兴起。我其实很早以前就决定不做web开发，因为单纯的不喜欢，我更偏向于C&#x2F;S结构的软件。后来经过慢慢地摸索，觉得web也挺有意思的。因为不用造轮子，有大量的框架，模板可以利用。最近想要开始写日志，把日志放在静态网页上有很多优点，比如</p><ol><li>美观。</li><li>成就感。</li></ol><p>废话就不说了，开始搭建。</p><h3 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h3><hr><p>如果使用了别人做的主题，那就必须要查看文档。文档中包含了很多配置项，能够指导你个性化使用主题，发布文章的操作流程。如何配置这里不多说，不同主题的使用方法也是不同。配置好后，使用hexo -s 命令预览效果，如果ok那就开始部署。</p><blockquote><p>1.部署在服务器中</p></blockquote><p>下载git包</p><pre class="language-shell" data-language="shell"><code class="language-shell">apt-get updateapt-get install git -y </code></pre><p>创建仓库文件夹,并修改读写权限</p><pre class="language-shell" data-language="shell"><code class="language-shell">mkdir &#x2F;var&#x2F;repo&#x2F;chown -R $USER:$USER &#x2F;var&#x2F;repo&#x2F;chmod -R 755 &#x2F;var&#x2F;repo&#x2F;</code></pre><p>创建远程仓库</p><pre class="language-shell" data-language="shell"><code class="language-shell">cd &#x2F;var&#x2F;repogit init --bare myblog.git</code></pre><p>创建git钩子（仓库与服务器根目录同步）</p><pre class="language-shell" data-language="shell"><code class="language-shell">vim &#x2F;var&#x2F;repo&#x2F;myblog.git&#x2F;hooks&#x2F;post-receivegit --work-tree&#x3D;&#123;Apache服务器根目录&#125; --git-dir&#x3D;&#x2F;var&#x2F;repo&#x2F;myblog.git checkout -f</code></pre><p>增加可执行权限</p><pre class="language-shell" data-language="shell"><code class="language-shell">chmod +x &#x2F;var&#x2F;repo&#x2F;myblog.git&#x2F;hooks&#x2F;post-receive</code></pre><p>回到本地操作系统上，在hexo站点配置_config.yml。更改其中的url和deploy，马赛克处是ip地址</p><p><img src="https://cdn.jsdelivr.net/gh/CarelTian/MyStatic@master/images/chat01-1.png"><br><img src="https://cdn.jsdelivr.net/gh/CarelTian/MyStatic@master/images/chat01-2.png"></p>  <div class="success"><blockquote><p>大功高成，还差最后一步命令上传到git仓库</p></blockquote>  </div><pre class="language-bash" data-language="bash"><code class="language-bash">hexo clean <span class="token operator">&amp;</span> hexo g -d</code></pre>]]></content>
      
      
      <categories>
          
          <category> -建站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -随便写写 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
